temp-reporter:
  enabled: true
  polling-interval: 5000

slack-alerter:
  enabled: true
  webhook-url: "SLACK WEBHOOK URL"


mp.messaging:

  incoming.from-kafka:
    connector: helidon-kafka
    topic: "STREAM_IN"
    auto.offset.reset: latest
    enable.auto.commit: true
    group.id: "GROUP_ID"

  outgoing.to-kafka:
    connector: helidon-kafka
    topic: "STREAM_OUT"

  connector:
    helidon-kafka:
      bootstrap.servers: "SERVER URL"
      sasl.mechanism: PLAIN
      security.protocol: SASL_SSL
      sasl.jaas.config: "SASL CONFIG"
      key.serializer: org.apache.kafka.common.serialization.StringSerializer
      value.serializer: org.apache.kafka.common.serialization.StringSerializer
      key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value.deserializer: org.apache.kafka.common.serialization.StringDeserializer

monitor-store: "map" # map/nosql/redis/coherence/dynamodb/mongo

nosql:
  compartment-id: "ocid1.compartment.oc1..xxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
  region: "us-ashburn-1"
  table-limits:
    read: 1
    write: 1
    storage: 1

dynamodb:
  islocal: false
  endpoint: http://localhost:8000 # when local
  regions: "ap-northeast-1"
  capacity:
    read: 1
    write: 1

mongo:
  url: "mongodb://localhost:27017"
  database: tempmon
  collection: temps
