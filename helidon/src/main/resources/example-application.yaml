kafka:
  tenant-name: "YOUR TENANT NAME"
  pool-id: "YOUR STREAMING POOL ID"
  streaming-server: "YOUR STREAMING SERVER URL"
  user-name: "YOUR USER NAME"
  auth-token: "YOUR AUTH TOKEN"

temp-reporter:
  enabled: true
  polling-interval: 5000
  kafka:
    tenant-name: "${ALIAS=kafka.tenant-name}"
    pool-id: "${ALIAS=kafka.pool-id}"
    streaming-server: "${ALIAS=kafka.streaming-server}"
    user-name: "${ALIAS=kafka.user-name}"
    auth-token: "${ALIAS=kafka.auth-token}"
    topic: "TOPIC TO PUBLISH"

slack-alerter:
  enabled: true
  webhook-url: "SLACK WEBHOOK URL"
  kafka:
    tenant-name: "${ALIAS=kafka.tenant-name}"
    pool-id: "${ALIAS=kafka.pool-id}"
    streaming-server: "${ALIAS=kafka.streaming-server}"
    user-name: "${ALIAS=kafka.user-name}"
    auth-token: "${ALIAS=kafka.auth-token}"
    topic: "TOPIC TO SUBSCRIBE"
    group-id: "GROUP_01"

monitor-store: "map" # map or nosql or redis or coherence

nosql:
  compartment-id: "ocid1.compartment.oc1..xxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
  region: "us-ashburn-1"
  table-limits:
    read: 1
    write: 1
    storage: 1

dynamodb:
  islocal: false
  endpoint: http://localhost:8000 # when local
  regions: "ap-northeast-1"
  capacity:
    read: 1
    write: 1

mongo:
  url: "mongodb://localhost:27017"
  database: tempmon
  collection: temps
